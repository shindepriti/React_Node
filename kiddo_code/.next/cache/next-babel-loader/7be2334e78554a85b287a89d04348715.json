{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/kiddo_code/components/Event/Details/details.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\n\nconst fetch = require('isomorphic-fetch');\n\nimport Router from 'next/router';\n\nconst moment = require('moment');\n\nclass Stats extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentEvent: {},\n      remainingTime: {\n        days: '',\n        hours: '',\n        minutes: '',\n        seconds: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    let id = Router.query.id;\n    let splitData = id.split('-');\n    var query = `\n                    query ActivityById($id: ID!){\n                        products(where:{id:$id}){\n                            id,\n                            product_name,\n                            product_introduction,\n                            product_hours,\n                            product_type{\n                              id,\n                              product_type\n                            },\n                            product_date,\n                            product_start_time,\n                            product_end_time,\n                            product_total_seats,\n                            product_remain_seats,\n                            product_event_map\n                        }\n                    }\n                    `;\n    var variables = {\n      \"id\": Number(splitData[0])\n    };\n    fetch(process.env.GRAPHURL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query,\n        variables\n      })\n    }).then(response => response.json()).then(response => {\n      this.setState({\n        currentEvent: response.data.products.length ? response.data.products[0] : {}\n      });\n      setInterval(() => this.duration(), 1000);\n    });\n  }\n\n  duration() {\n    var currentTime = moment(new Date()).format('YYYY-MM-DD hh:mm:ss');\n    var eventTime = this.state.currentEvent.product_date + ' ' + this.state.currentEvent.product_start_time;\n    eventTime = moment(eventTime).format('YYYY-MM-DD hh:mm:ss');\n\n    if (currentTime < eventTime) {\n      let duration = new Date(eventTime) - new Date(currentTime);\n\n      if (duration > 0) {\n        var seconds = parseInt(duration / 1000 % 60),\n            minutes = parseInt(duration / (1000 * 60) % 60),\n            hours = parseInt(duration / (1000 * 60 * 60) % 24),\n            days = parseInt(duration / (24 * 60 * 60 * 1000));\n        days = days < 10 ? \"0\" + days : days;\n        hours = hours < 10 ? \"0\" + hours : hours;\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\n      } else {\n        var seconds = '00',\n            minutes = '00',\n            hours = '00',\n            days = '00';\n      }\n    } else {\n      var seconds = '00',\n          minutes = '00',\n          hours = '00',\n          days = '00';\n    }\n\n    this.setState({\n      remainingTime: {\n        days: days,\n        hours: hours,\n        minutes: minutes,\n        seconds: seconds\n      }\n    });\n  }\n\n  render() {\n    const {\n      currentEvent,\n      remainingTime\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(\"section\", {\n      className: \"event-details-wrap dark-blue-bg text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, __jsx(\"h2\", {\n      className: \"mb-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, \"Event details \"), __jsx(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"col-lg-5 col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, __jsx(\"div\", {\n      className: \"col-12 add-countdown-time\",\n      \"data-countdown-date\": \"2020/07/28\",\n      \"data-detailed\": \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      \"data-active\": \"\",\n      className: \"row text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 37\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 41\n      }\n    }, __jsx(\"span\", {\n      className: \"h1 text-primary mb-2\",\n      \"data-days\": \"\",\n      \"data-format\": \"%d\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 45\n      }\n    }, remainingTime.days ? remainingTime.days : '-'), \" \", __jsx(\"span\", {\n      className: \"h1 text-primary column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 169\n      }\n    }, \":\"), __jsx(\"span\", {\n      className: \"h6 mb-0\",\n      \"data-days-label\": \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 45\n      }\n    }, \"Days\")), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 41\n      }\n    }, __jsx(\"span\", {\n      className: \"h1 text-primary mb-2\",\n      \"data-hours\": \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 45\n      }\n    }, remainingTime.hours ? remainingTime.hours : '-'), \" \", __jsx(\"span\", {\n      className: \"h1 text-primary column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 155\n      }\n    }, \":\"), __jsx(\"span\", {\n      className: \"h6 mb-0\",\n      \"data-hours-label\": \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 45\n      }\n    }, \"Hours\")), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 41\n      }\n    }, __jsx(\"span\", {\n      className: \"h1 text-primary mb-2\",\n      \"data-minutes\": \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 45\n      }\n    }, remainingTime.minutes ? remainingTime.minutes : '-'), \" \", __jsx(\"span\", {\n      className: \"h1 text-primary column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 161\n      }\n    }, \":\"), __jsx(\"span\", {\n      className: \"h6 mb-0\",\n      \"data-minutes-label\": \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 45\n      }\n    }, \"Minutes\")), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 41\n      }\n    }, __jsx(\"span\", {\n      className: \"h1 text-primary mb-2\",\n      \"data-seconds\": \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 45\n      }\n    }, remainingTime.seconds ? remainingTime.seconds : '-'), __jsx(\"span\", {\n      className: \"h6 mb-0\",\n      \"data-seconds-label\": \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 45\n      }\n    }, \"Seconds\"))), __jsx(\"div\", {\n      \"data-elapsed\": \"\",\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 37\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 41\n      }\n    }, \"This is the fallback for when the countdown is elapsed\"))), __jsx(\"div\", {\n      className: \"border-bottom pt-6 mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 33\n      }\n    }), __jsx(\"div\", {\n      className: \"event-details-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      className: \"col-6 event-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 37\n      }\n    }, __jsx(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 41\n      }\n    }, \"Date\"), __jsx(\"h2\", {\n      className: \"display-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 41\n      }\n    }, currentEvent.product_date ? moment(currentEvent.product_date).format(\"DD\") : '-', \" \", __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 150\n      }\n    }, currentEvent.product_date ? moment(currentEvent.product_date).format(\"MMM\") : '-'))), __jsx(\"div\", {\n      className: \"col-6 event-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 37\n      }\n    }, __jsx(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 41\n      }\n    }, \"Starts at\"), __jsx(\"h2\", {\n      className: \"display-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 41\n      }\n    }, currentEvent.product_start_time ? moment(currentEvent.product_start_time, 'hh:mm:ss').format(\"h\") : '-', \" \", __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 173\n      }\n    }, currentEvent.product_start_time ? moment(currentEvent.product_start_time, 'hh:mm:ss').format(\"A\") : '-'))), __jsx(\"div\", {\n      className: \"col-6 event-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 37\n      }\n    }, __jsx(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 41\n      }\n    }, \"Seats left\"), __jsx(\"h2\", {\n      className: \"display-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 41\n      }\n    }, currentEvent.product_remain_seats ? currentEvent.product_remain_seats : '-', __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 144\n      }\n    }, \" /\", currentEvent.product_total_seats ? currentEvent.product_total_seats : '-'))), __jsx(\"div\", {\n      className: \"col-6 event-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 37\n      }\n    }, __jsx(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 41\n      }\n    }, \"Ends at\"), __jsx(\"h2\", {\n      className: \"display-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 41\n      }\n    }, currentEvent.product_end_time ? moment(currentEvent.product_end_time, 'hh:mm:ss').format(\"h\") : '-', \" \", __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 169\n      }\n    }, currentEvent.product_end_time ? moment(currentEvent.product_end_time, 'hh:mm:ss').format(\"A\") : '-'))))), __jsx(\"div\", {\n      className: \"col-lg-7 col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }, __jsx(\"iframe\", {\n      src: currentEvent.product_event_map ? currentEvent.product_event_map : '',\n      style: {\n        border: 0\n      },\n      allowFullScreen: \"\",\n      \"aria-hidden\": \"false\",\n      tabIndex: \"0\",\n      width: \"100%\",\n      height: \"450\",\n      frameBorder: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}\n\nexport default Stats;","map":{"version":3,"sources":["/home/dell/Desktop/kiddo_code/components/Event/Details/details.js"],"names":["React","Component","fetch","require","Router","moment","Stats","constructor","props","state","currentEvent","remainingTime","days","hours","minutes","seconds","componentDidMount","id","query","splitData","split","variables","Number","process","env","GRAPHURL","method","headers","body","JSON","stringify","then","response","json","setState","data","products","length","setInterval","duration","currentTime","Date","format","eventTime","product_date","product_start_time","parseInt","render","display","product_remain_seats","product_total_seats","product_end_time","product_event_map","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nconst fetch = require('isomorphic-fetch');\nimport Router from 'next/router';\nconst moment = require('moment');\n\nclass Stats extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentEvent: {},\n            remainingTime: {\n                days: '',\n                hours: '',\n                minutes: '',\n                seconds: '',\n            }\n        };\n    }\n\n    componentDidMount() {\n        let id = Router.query.id;\n        let splitData = id.split('-');\n        var query = `\n                    query ActivityById($id: ID!){\n                        products(where:{id:$id}){\n                            id,\n                            product_name,\n                            product_introduction,\n                            product_hours,\n                            product_type{\n                              id,\n                              product_type\n                            },\n                            product_date,\n                            product_start_time,\n                            product_end_time,\n                            product_total_seats,\n                            product_remain_seats,\n                            product_event_map\n                        }\n                    }\n                    `;\n        var variables = {\n            \"id\": Number(splitData[0])\n        }\n        fetch(process.env.GRAPHURL, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ query, variables }),\n        })\n            .then(response => response.json())\n            .then((response) => {\n                this.setState({\n                    currentEvent: response.data.products.length ? response.data.products[0] : {},\n                });\n                setInterval(() => this.duration(), 1000);\n            });\n\n    }\n    duration() {\n        var currentTime = moment(new Date()).format('YYYY-MM-DD hh:mm:ss')\n        var eventTime = this.state.currentEvent.product_date + ' ' + this.state.currentEvent.product_start_time;\n        eventTime = moment(eventTime).format('YYYY-MM-DD hh:mm:ss');\n        if (currentTime < eventTime) {\n            let duration = (new Date(eventTime)) - (new Date(currentTime));\n            if (duration > 0) {\n                var seconds = parseInt((duration / 1000) % 60)\n                    , minutes = parseInt((duration / (1000 * 60)) % 60)\n                    , hours = parseInt((duration / (1000 * 60 * 60)) % 24)\n                    , days = parseInt((duration / (24 * 60 * 60 * 1000)));\n\n                days = (days < 10) ? \"0\" + days : days;\n                hours = (hours < 10) ? \"0\" + hours : hours;\n                minutes = (minutes < 10) ? \"0\" + minutes : minutes;\n                seconds = (seconds < 10) ? \"0\" + seconds : seconds;\n            } else {\n                var seconds = '00'\n                    , minutes = '00'\n                    , hours = '00'\n                    , days = '00'\n            }\n        }\n        else {\n            var seconds = '00'\n                , minutes = '00'\n                , hours = '00'\n                , days = '00'\n        }\n\n        this.setState({\n            remainingTime: {\n                days: days,\n                hours: hours,\n                minutes: minutes,\n                seconds: seconds,\n            }\n        })\n    }\n    render() {\n        const { currentEvent, remainingTime } = this.state;\n        return (\n            <>\n                <section className=\"event-details-wrap dark-blue-bg text-light\">\n                    <div className=\"container\">\n                        <h2 className=\"mb-6\">Event details </h2>\n                        <div className=\"row\">\n                            <div className=\"col-lg-5 col-md-6\">\n\n                                <div className=\"col-12 add-countdown-time\" data-countdown-date=\"2020/07/28\" data-detailed=\"\">\n                                    <div data-active=\"\" className=\"row text-center\">\n\n                                        <span>\n                                            <span className=\"h1 text-primary mb-2\" data-days=\"\" data-format=\"%d\">{remainingTime.days ? remainingTime.days : '-'}</span> <span className=\"h1 text-primary column\">:</span>\n                                            <span className=\"h6 mb-0\" data-days-label=\"\">Days</span>\n                                        </span>\n\n                                        <span>\n                                            <span className=\"h1 text-primary mb-2\" data-hours=\"\">{remainingTime.hours ? remainingTime.hours : '-'}</span> <span className=\"h1 text-primary column\">:</span>\n                                            <span className=\"h6 mb-0\" data-hours-label=\"\">Hours</span>\n                                        </span>\n\n                                        <span>\n                                            <span className=\"h1 text-primary mb-2\" data-minutes=\"\">{remainingTime.minutes ? remainingTime.minutes : '-'}</span> <span className=\"h1 text-primary column\">:</span>\n                                            <span className=\"h6 mb-0\" data-minutes-label=\"\">Minutes</span>\n                                        </span>\n\n                                        <span>\n                                            <span className=\"h1 text-primary mb-2\" data-seconds=\"\">{remainingTime.seconds ? remainingTime.seconds : '-'}</span>\n                                            <span className=\"h6 mb-0\" data-seconds-label=\"\">Seconds</span>\n                                        </span>\n                                    </div>\n                                    <div data-elapsed=\"\" style={{ display: 'none' }}>\n                                        <h1>This is the fallback for when the countdown is elapsed</h1>\n                                    </div>\n                                </div>\n\n                                <div className=\"border-bottom pt-6 mb-5\"></div>\n\n                                <div className=\"event-details-main\">\n                                    <div className=\"col-6 event-details\">\n                                        <h6>Date</h6>\n                                        <h2 className=\"display-4\">{currentEvent.product_date ? moment(currentEvent.product_date).format(\"DD\") : '-'} <span>{currentEvent.product_date ? moment(currentEvent.product_date).format(\"MMM\") : '-'}</span></h2>\n                                    </div>\n                                    <div className=\"col-6 event-details\">\n                                        <h6>Starts at</h6>\n                                        <h2 className=\"display-4\">{currentEvent.product_start_time ? moment(currentEvent.product_start_time, 'hh:mm:ss').format(\"h\") : '-'} <span>{currentEvent.product_start_time ? moment(currentEvent.product_start_time, 'hh:mm:ss').format(\"A\") : '-'}</span></h2>\n                                    </div>\n                                    <div className=\"col-6 event-details\">\n                                        <h6>Seats left</h6>\n                                        <h2 className=\"display-4\">{currentEvent.product_remain_seats ? currentEvent.product_remain_seats : '-'}<span> /{currentEvent.product_total_seats ? currentEvent.product_total_seats : '-'}</span></h2>\n                                    </div>\n                                    <div className=\"col-6 event-details\">\n                                        <h6>Ends at</h6>\n                                        <h2 className=\"display-4\">{currentEvent.product_end_time ? moment(currentEvent.product_end_time, 'hh:mm:ss').format(\"h\") : '-'} <span>{currentEvent.product_end_time ? moment(currentEvent.product_end_time, 'hh:mm:ss').format(\"A\") : '-'}</span></h2>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"col-lg-7 col-md-6\">\n                                <iframe src={currentEvent.product_event_map ? currentEvent.product_event_map : ''} style={{ border: 0 }} allowFullScreen=\"\" aria-hidden=\"false\" tabIndex=\"0\" width=\"100%\" height=\"450\" frameBorder=\"0\"></iframe>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </>\n        )\n    }\n}\n\nexport default Stats;"]},"metadata":{},"sourceType":"module"}