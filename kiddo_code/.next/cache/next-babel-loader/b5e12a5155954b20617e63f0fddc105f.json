{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/kiddo_code/components/Degree/Review/review.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport StarRatings from 'react-star-ratings';\nimport Pagination from 'react-js-pagination';\nimport moment from 'moment';\n\nconst publicIp = require('public-ip');\n\nconst fetch = require('isomorphic-fetch');\n\nfunction dayDifference(text) {\n  let parsedDate = moment.utc(text);\n  let now = moment.utc();\n  let differenceInDays = now.diff(parsedDate, 'days'); //console.log(differenceInDays);\n\n  if (differenceInDays < 30 && differenceInDays > 1) {\n    return `${differenceInDays} days ago`;\n  } else if (differenceInDays == 1) {\n    return 'yesterday';\n  } else if (differenceInDays == 0) {\n    // Calculate hours\n    let differenceInHours = now.diff(parsedDate, 'hours'); //console.log(differenceInHours);\n\n    if (differenceInHours > 0) {\n      return `${differenceInHours} hours ago`;\n    } else {\n      let differenceInMinutes = now.diff(parsedDate, 'minutes'); //console.log(differenceInMinutes);\n\n      if (differenceInMinutes > 1) {\n        return `${differenceInMinutes} mins ago`;\n      } else {\n        let differenceInSec = now.diff(parsedDate, 'seconds'); //console.log(differenceInSec);\n\n        return `${differenceInSec} secs ago`;\n      }\n    }\n  } else {\n    return parsedDate.format('ddd, DD MMM YYYY HH:mm:ss') + ' GMT';\n  }\n}\n\nfunction setRating(ratingValue) {\n  let rating = 0;\n\n  if (ratingValue === 'ONE') {\n    rating = 1;\n  } else if (ratingValue === 'TWO') {\n    rating = 2;\n  } else if (ratingValue === 'THREE') {\n    rating = 3;\n  } else if (ratingValue === 'FOUR') {\n    rating = 4;\n  } else if (ratingValue === 'FIVE') {\n    rating = 5;\n  }\n\n  return rating;\n}\n\nclass Review extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getWebReportDetail\", async reviewerName => {\n      var query = `\n                  query ActivityById($webreviewname: String!,$webipaddress: String!){\n                    webReviews(where:{webreviewname:$webreviewname,webipaddress:$webipaddress}){\n                      id\n                      webreviewname\n                      webipaddress\n                      webreviewlike\n                    }\n                  }\n                    `;\n      var variables = {\n        \"webreviewname\": reviewerName,\n        \"webipaddress\": this.state.ipAddress\n      };\n      return fetch(process.env.GRAPHURL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query,\n          variables\n        })\n      }).then(response => response.json()).then(response => {\n        return response.data;\n      });\n    });\n\n    _defineProperty(this, \"changeReportUp\", async (reviewerName, reviewerFlag) => {\n      let checkReviewAvailable = await this.getWebReportDetail(reviewerName);\n\n      if (checkReviewAvailable.webReviews.length === 0) {\n        var query = `\n              mutation {\n                createWebReview(input: { data: { webreviewname: \"${reviewerName}\", webipaddress: \n                \"${this.state.ipAddress}\", webreviewlike: ${reviewerFlag} } }) {\n                  webReview{\n                    webreviewname\n                    webipaddress\n                    webreviewlike\n                  }\n                }\n              }\n                `;\n        fetch(process.env.GRAPHURL, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            query\n          })\n        }).then(response => response.json()).then(response => {\n          //console.log(response);\n          this.getDbReviewData(this.state.ipAddress);\n        });\n      } else {\n        let webViewRecord = checkReviewAvailable.webReviews[0];\n        let query = `\n              mutation {\n                updateWebReview(input: { where: { id: ${webViewRecord.id} } data: { webreviewname: \"${reviewerName}\", webipaddress: \n                \"${this.state.ipAddress}\", webreviewlike: ${reviewerFlag} } }) {\n                  webReview{\n                    webreviewname\n                    webipaddress\n                    webreviewlike\n                  }\n                }\n              }\n                `;\n        fetch(process.env.GRAPHURL, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            query\n          })\n        }).then(response => response.json()).then(response => {\n          //console.log(response);\n          this.getDbReviewData(this.state.ipAddress);\n        });\n      }\n    });\n\n    _defineProperty(this, \"changeReportDown\", async (reviewerName, reviewerFlag) => {\n      let checkReviewAvailable = await this.getWebReportDetail(reviewerName); //console.log(\"checkReviewAvailable\", checkReviewAvailable);\n\n      if (checkReviewAvailable.webReviews.length === 0) {\n        let query = `\n              mutation {\n                createWebReview(input: { data: { webreviewname: \"${reviewerName}\", webipaddress: \n                \"${this.state.ipAddress}\", webreviewlike: ${reviewerFlag} } }) {\n                  webReview{\n                    webreviewname\n                    webipaddress\n                    webreviewlike\n                  }\n                }\n              }\n                `;\n        fetch(process.env.GRAPHURL, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            query\n          })\n        }).then(response => response.json()).then(response => {\n          //console.log(response);\n          this.getDbReviewData(this.state.ipAddress);\n        });\n      } else {\n        let webViewRecord = checkReviewAvailable.webReviews[0];\n        let query = `\n              mutation {\n                updateWebReview(input: { where: { id: ${webViewRecord.id} } data: { webreviewname: \"${reviewerName}\", webipaddress: \n                \"${this.state.ipAddress}\", webreviewlike: ${reviewerFlag} } }) {\n                  webReview{\n                    webreviewname\n                    webipaddress\n                    webreviewlike\n                  }\n                }\n              }\n                `;\n        fetch(process.env.GRAPHURL, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            query\n          })\n        }).then(response => response.json()).then(response => {\n          //console.log(response); \n          this.getDbReviewData(this.state.ipAddress);\n        });\n      }\n    });\n\n    _defineProperty(this, \"handlePageChange\", pageNumber => {\n      this.setState({\n        activePage: pageNumber\n      });\n    });\n\n    _defineProperty(this, \"handleModal\", () => {\n      this.setState({\n        openModal: !this.state.openModal\n      });\n    });\n\n    this.state = {\n      reviewData: [],\n      allReviewData: [],\n      originalReviewData: [],\n      allDbReviewData: [],\n      openModal: false,\n      activePage: 1,\n      staticNumberOfRow: '10',\n      ipAddress: ''\n    };\n  }\n\n  async componentDidMount() {\n    let ipAddress = await publicIp.v4();\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'authorization': `Bearer nc9ZZ50ddngaz8QxGaO5BR3dYzzjKaJ5XtuYHiOD9kO53gHz1K3ngPMv9gRYWHh1`\n      }\n    };\n    return fetch('https://kapi.kidocode.com/api/v1/kweb/business/review', requestOptions).then(response => response.json()).then(response => {\n      //console.log('review', response)\n      if (response.status) {\n        this.getDbReviewData(ipAddress);\n        this.setState({\n          reviewData: response.reviews,\n          allReviewData: response.reviews,\n          ipAddress: ipAddress\n        });\n      }\n    });\n  }\n\n  getDbReviewData(ipAddress) {\n    var query = `\n                  query ActivityById($webipaddress: String!){\n                    webReviews(where:{webipaddress:$webipaddress}){\n                      id\n                      webreviewname\n                      webipaddress\n                      webreviewlike\n                    }\n                  }\n                    `;\n    var variables = {\n      \"webipaddress\": ipAddress\n    };\n    fetch(process.env.GRAPHURL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query,\n        variables\n      })\n    }).then(response => response.json()).then(response => {\n      if (response.data && response.data.webReviews.length > 0) {\n        this.setState({\n          allDbReviewData: response.data.webReviews\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      reviewData,\n      allReviewData,\n      activePage,\n      staticNumberOfRow,\n      allDbReviewData\n    } = this.state; //console.log('reviewData', reviewData)\n\n    return __jsx(React.Fragment, null, __jsx(\"section\", {\n      className: \"review-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }\n    }, \"Review\"), __jsx(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }\n    }, reviewData.length > 0 && reviewData.slice(0, 2).map((review, index) => {\n      let reviewFlag = allDbReviewData.find(item => item.webreviewname === review.reviewerName && item.webipaddress === this.state.ipAddress);\n      return __jsx(\"div\", {\n        key: index,\n        className: \"comment-sec\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }\n      }, __jsx(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 27\n        }\n      }, review.reviewerName ? review.reviewerName : ''), __jsx(\"div\", {\n        className: \"d-flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 27\n        }\n      }, __jsx(\"div\", {\n        className: \"d-flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 29\n        }\n      }, __jsx(StarRatings, {\n        rating: setRating(review.starRating),\n        starRatedColor: \"#ffc107\",\n        numberOfStars: 5,\n        name: \"rating\",\n        starDimension: \"20px\",\n        starSpacing: \"5px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 31\n        }\n      })), __jsx(\"h6\", {\n        className: \"mb-0 opacity-80 font-weight-normal ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 29\n        }\n      }, dayDifference(review.createTime))), __jsx(\"p\", {\n        className: \"h6 h5 font-weight-normal mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 27\n        }\n      }, review.comment ? review.comment : ''), __jsx(\"h6\", {\n        className: \"font-weight-normal opacity-60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 27\n        }\n      }, \"Was this helpful?\"), __jsx(\"div\", {\n        className: \"d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 27\n        }\n      }, __jsx(\"div\", {\n        className: \"review-btn\",\n        onClick: () => this.changeReportUp(review.reviewerName, true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 29\n        }\n      }, __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 120\n        }\n      }, __jsx(\"i\", {\n        className: reviewFlag && reviewFlag.webreviewlike === true ? \"fa fa-thumbs-up cornflowerblue\" : \"fa fa-thumbs-up\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 126\n        }\n      }))), __jsx(\"div\", {\n        className: \"review-btn\",\n        onClick: () => this.changeReportDown(review.reviewerName, false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 29\n        }\n      }, __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 123\n        }\n      }, __jsx(\"i\", {\n        className: reviewFlag && reviewFlag.webreviewlike === false ? \"fa fa-thumbs-down cornflowerblue\" : \"fa fa-thumbs-down ffgdgdfgdfg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 129\n        }\n      }))), __jsx(\"h6\", {\n        className: \"ml-2 mb-0 opacity-60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 29\n        }\n      }, \"Report\")));\n    }), __jsx(\"a\", {\n      href: \"#\",\n      className: \"mt-4 d-inline-block\",\n      onClick: this.handleModal.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 19\n      }\n    }, \"Show more \", __jsx(\"span\", {\n      className: \"ml-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 111\n      }\n    }, __jsx(\"i\", {\n      className: \"fa fa-angle-down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 134\n      }\n    })))), __jsx(\"div\", {\n      className: \"col-md-6 text-light p-2 pb-5 pl-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"p-5\",\n      style: {\n        backgroundImage: `url(/assets/images/img21.jpg)`,\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 19\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 21\n      }\n    }, \"Ready to go long-term?\"), __jsx(\"h5\", {\n      className: \"font-weight-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }\n    }, \"Check out our degrees.\"), __jsx(\"a\", {\n      href: \"#\",\n      className: \"btn btn-lightblue text-light rounded-0 mt-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 21\n      }\n    }, \"Explore degree\"))))))), __jsx(Modal, {\n      size: \"lg\",\n      show: this.state.openModal,\n      onHide: this.handleModal.bind(this),\n      animation: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }\n    }, __jsx(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 15\n      }\n    }, __jsx(\"h2\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }\n    }, \"Review\"), __jsx(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }\n    }, allReviewData.length > 0 && allReviewData.slice((activePage - 1) * staticNumberOfRow, (activePage - 1 + 1) * staticNumberOfRow).map((review, index) => {\n      let reviewFlag = allDbReviewData.find(item => item.webreviewname === review.reviewerName && item.webipaddress === this.state.ipAddress);\n      return __jsx(\"div\", {\n        key: index,\n        className: \"comment-sec\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 25\n        }\n      }, __jsx(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 27\n        }\n      }, review.reviewerName ? review.reviewerName : ''), __jsx(\"div\", {\n        className: \"d-flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 27\n        }\n      }, __jsx(\"div\", {\n        className: \"d-flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 29\n        }\n      }, __jsx(StarRatings, {\n        rating: setRating(review.starRating),\n        starRatedColor: \"#ffc107\",\n        numberOfStars: 5,\n        name: \"rating\",\n        starDimension: \"20px\",\n        starSpacing: \"5px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 31\n        }\n      })), __jsx(\"h6\", {\n        className: \"mb-0 opacity-80 font-weight-normal ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 29\n        }\n      }, dayDifference(review.createTime))), __jsx(\"p\", {\n        className: \"h6 h5 font-weight-normal mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 27\n        }\n      }, review.comment ? review.comment : ''), __jsx(\"h6\", {\n        className: \"font-weight-normal opacity-60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 27\n        }\n      }, \"Was this helpful?\"), __jsx(\"div\", {\n        className: \"d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 27\n        }\n      }, __jsx(\"div\", {\n        className: \"review-btn\",\n        onClick: () => this.changeReportUp(review.reviewerName, true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 29\n        }\n      }, __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 120\n        }\n      }, __jsx(\"i\", {\n        className: reviewFlag && reviewFlag.webreviewlike === true ? \"fa fa-thumbs-up cornflowerblue\" : \"fa fa-thumbs-up\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 126\n        }\n      }))), __jsx(\"div\", {\n        className: \"review-btn\",\n        onClick: () => this.changeReportDown(review.reviewerName, false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 29\n        }\n      }, __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 123\n        }\n      }, __jsx(\"i\", {\n        className: reviewFlag && reviewFlag.webreviewlike === false ? \"fa fa-thumbs-down cornflowerblue\" : \"fa fa-thumbs-down ffgdgdfgdfg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 129\n        }\n      }))), __jsx(\"h6\", {\n        className: \"ml-2 mb-0 opacity-60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 29\n        }\n      }, \"Report\")));\n    })), __jsx(\"div\", {\n      className: \"row justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"pagination-detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 19\n      }\n    }, __jsx(Pagination, {\n      hideFirstLastPages: true,\n      activePage: this.state.activePage,\n      itemsCountPerPage: this.state.staticNumberOfRow,\n      itemClass: \"page-item\",\n      linkClass: \"page-link\",\n      totalItemsCount: allReviewData.length,\n      pageRangeDisplayed: 5,\n      onChange: this.handlePageChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 21\n      }\n    })))))));\n  }\n\n}\n\nexport default Review;","map":{"version":3,"sources":["/home/dell/Desktop/kiddo_code/components/Degree/Review/review.js"],"names":["React","Component","Modal","StarRatings","Pagination","moment","publicIp","require","fetch","dayDifference","text","parsedDate","utc","now","differenceInDays","diff","differenceInHours","differenceInMinutes","differenceInSec","format","setRating","ratingValue","rating","Review","constructor","props","reviewerName","query","variables","state","ipAddress","process","env","GRAPHURL","method","headers","body","JSON","stringify","then","response","json","data","reviewerFlag","checkReviewAvailable","getWebReportDetail","webReviews","length","getDbReviewData","webViewRecord","id","pageNumber","setState","activePage","openModal","reviewData","allReviewData","originalReviewData","allDbReviewData","staticNumberOfRow","componentDidMount","v4","requestOptions","status","reviews","render","slice","map","review","index","reviewFlag","find","item","webreviewname","webipaddress","starRating","createTime","comment","changeReportUp","webreviewlike","changeReportDown","handleModal","bind","backgroundImage","backgroundPosition","backgroundRepeat","handlePageChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport  { Modal } from 'react-bootstrap';\nimport StarRatings from 'react-star-ratings';\nimport Pagination from 'react-js-pagination';\nimport moment from 'moment';\nconst publicIp = require('public-ip');\nconst fetch = require('isomorphic-fetch');\n\nfunction dayDifference(text) {\n  let parsedDate = moment.utc(text);\n  let now = moment.utc();\n  let differenceInDays = now.diff(parsedDate,'days');\n  //console.log(differenceInDays);\n  if(differenceInDays<30 && differenceInDays>1){\n      return `${differenceInDays} days ago`;\n  }else if(differenceInDays == 1){\n      return 'yesterday';\n  }else if(differenceInDays == 0){\n      // Calculate hours\n      let differenceInHours = now.diff(parsedDate,'hours');\n      //console.log(differenceInHours);\n      if(differenceInHours > 0) {\n          return `${differenceInHours} hours ago`;\n      }else {\n          let differenceInMinutes = now.diff(parsedDate,'minutes');\n          //console.log(differenceInMinutes);\n          if(differenceInMinutes>1){\n              return `${differenceInMinutes} mins ago`;\n          }else {\n              let differenceInSec = now.diff(parsedDate,'seconds');\n              //console.log(differenceInSec);\n              return `${differenceInSec} secs ago`;\n          }\n      }\n  }else{\n      return parsedDate.format('ddd, DD MMM YYYY HH:mm:ss')+' GMT';\n  }\n}\n\nfunction setRating(ratingValue) {\n  let rating = 0;\n  if (ratingValue === 'ONE') {\n    rating = 1;\n  } else if (ratingValue === 'TWO') {\n    rating = 2;\n  } else if (ratingValue === 'THREE') {\n    rating = 3;\n  } else if (ratingValue === 'FOUR') {\n    rating = 4;\n  } else if (ratingValue === 'FIVE') {\n    rating = 5;\n  }\n  return rating;\n}\n\nclass Review extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reviewData: [],\n      allReviewData: [],\n      originalReviewData: [],\n      allDbReviewData: [], \n      openModal: false,\n      activePage: 1,\n      staticNumberOfRow: '10',\n      ipAddress:''\n    };\n  }\n\n  async componentDidMount() {\n    let ipAddress = await publicIp.v4();\n    \n    const requestOptions = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json', 'authorization': `Bearer nc9ZZ50ddngaz8QxGaO5BR3dYzzjKaJ5XtuYHiOD9kO53gHz1K3ngPMv9gRYWHh1` },\n    };\n    return fetch('https://kapi.kidocode.com/api/v1/kweb/business/review', requestOptions)\n      .then(response => response.json())\n      .then((response) => {\n        //console.log('review', response)\n        if (response.status) {\n          this.getDbReviewData(ipAddress);\n          this.setState({\n            reviewData: response.reviews,\n            allReviewData: response.reviews,\n            ipAddress: ipAddress\n          });\n        }\n      })\n  }\n\n  getDbReviewData(ipAddress) {\n    var query = `\n                  query ActivityById($webipaddress: String!){\n                    webReviews(where:{webipaddress:$webipaddress}){\n                      id\n                      webreviewname\n                      webipaddress\n                      webreviewlike\n                    }\n                  }\n                    `;\n        var variables = {\n          \"webipaddress\": ipAddress\n        }\n        fetch(process.env.GRAPHURL, {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify({ query, variables }),\n            })\n            .then(response => response.json())\n            .then((response) => {\n              if(response.data && response.data.webReviews.length > 0) {\n                this.setState({\n                  allDbReviewData:response.data.webReviews\n                });\n              }\n            });\n    \n  }\n\n  getWebReportDetail = async (reviewerName) => {\n    var query = `\n                  query ActivityById($webreviewname: String!,$webipaddress: String!){\n                    webReviews(where:{webreviewname:$webreviewname,webipaddress:$webipaddress}){\n                      id\n                      webreviewname\n                      webipaddress\n                      webreviewlike\n                    }\n                  }\n                    `;\n        var variables = {\n          \"webreviewname\": reviewerName,\n          \"webipaddress\": this.state.ipAddress\n        }\n        return fetch(process.env.GRAPHURL, {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify({ query, variables }),\n            })\n            .then(response => response.json())\n            .then((response) => {\n              return response.data;\n            });\n    \n  }\n\n  changeReportUp = async(reviewerName, reviewerFlag) => {\n    let checkReviewAvailable = await this.getWebReportDetail(reviewerName);\n    if (checkReviewAvailable.webReviews.length === 0) {\n      var query = `\n              mutation {\n                createWebReview(input: { data: { webreviewname: \"${reviewerName}\", webipaddress: \n                \"${this.state.ipAddress}\", webreviewlike: ${reviewerFlag} } }) {\n                  webReview{\n                    webreviewname\n                    webipaddress\n                    webreviewlike\n                  }\n                }\n              }\n                `;\n      fetch(process.env.GRAPHURL, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ query }),\n          })\n          .then(response => response.json())\n          .then((response) => {\n            //console.log(response);\n            this.getDbReviewData(this.state.ipAddress);\n          });\n    } else {\n      let webViewRecord = checkReviewAvailable.webReviews[0];\n      let query = `\n              mutation {\n                updateWebReview(input: { where: { id: ${webViewRecord.id} } data: { webreviewname: \"${reviewerName}\", webipaddress: \n                \"${this.state.ipAddress}\", webreviewlike: ${reviewerFlag} } }) {\n                  webReview{\n                    webreviewname\n                    webipaddress\n                    webreviewlike\n                  }\n                }\n              }\n                `;\n      fetch(process.env.GRAPHURL, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ query }),\n          })\n          .then(response => response.json())\n          .then((response) => {\n            //console.log(response);\n            this.getDbReviewData(this.state.ipAddress);\n          });\n    }\n    \n  }\n\n  changeReportDown = async(reviewerName, reviewerFlag) => {\n    let checkReviewAvailable = await this.getWebReportDetail(reviewerName);\n    //console.log(\"checkReviewAvailable\", checkReviewAvailable);\n    if (checkReviewAvailable.webReviews.length === 0) {\n      let query = `\n              mutation {\n                createWebReview(input: { data: { webreviewname: \"${reviewerName}\", webipaddress: \n                \"${this.state.ipAddress}\", webreviewlike: ${reviewerFlag} } }) {\n                  webReview{\n                    webreviewname\n                    webipaddress\n                    webreviewlike\n                  }\n                }\n              }\n                `;\n      fetch(process.env.GRAPHURL, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ query }),\n          })\n          .then(response => response.json())\n          .then((response) => {\n            //console.log(response);\n            this.getDbReviewData(this.state.ipAddress);  \n          });\n    } else {\n      let webViewRecord = checkReviewAvailable.webReviews[0];\n      let query = `\n              mutation {\n                updateWebReview(input: { where: { id: ${webViewRecord.id} } data: { webreviewname: \"${reviewerName}\", webipaddress: \n                \"${this.state.ipAddress}\", webreviewlike: ${reviewerFlag} } }) {\n                  webReview{\n                    webreviewname\n                    webipaddress\n                    webreviewlike\n                  }\n                }\n              }\n                `;\n      fetch(process.env.GRAPHURL, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ query }),\n          })\n          .then(response => response.json())\n          .then((response) => {\n            //console.log(response); \n            this.getDbReviewData(this.state.ipAddress);\n          });\n    }\n    \n  }\n\n  handlePageChange = pageNumber => {\n    this.setState({ activePage: pageNumber });\n  };\n\n  handleModal = () => {\n    this.setState({\n      openModal: !this.state.openModal\n    })\n  }\n\n  render() {\n    const { reviewData, allReviewData, activePage, staticNumberOfRow, allDbReviewData } = this.state;\n    //console.log('reviewData', reviewData)\n    return (\n      <>\n        <section className=\"review-section\">\n          <div className=\"container\">\n            <h2 className=\"mb-4\">Review</h2>\n            <div className=\"col-md-12\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  {\n                    reviewData.length > 0 &&\n                    reviewData.slice(0,2).map((review, index) => {\n                      let reviewFlag = allDbReviewData.find(item => item.webreviewname === review.reviewerName && item.webipaddress === this.state.ipAddress);\n                      return (\n                        <div key={index} className=\"comment-sec\">\n                          <h5>{review.reviewerName ? review.reviewerName : ''}</h5>\n                          <div className=\"d-flex\">\n                            <div className=\"d-flex\">\n                              <StarRatings\n                                rating={setRating(review.starRating)}\n                                starRatedColor=\"#ffc107\"\n                                numberOfStars={5}\n                                name='rating'\n                                starDimension=\"20px\"\n                                starSpacing=\"5px\"\n                              />\n                            </div>\n                            <h6 className=\"mb-0 opacity-80 font-weight-normal ml-2\">{dayDifference(review.createTime)}</h6>\n                          </div>\n                          <p className=\"h6 h5 font-weight-normal mt-2\">{review.comment ? review.comment : ''}</p>\n                          <h6 className=\"font-weight-normal opacity-60\">Was this helpful?</h6>\n                          <div className=\"d-flex align-items-center\">\n                            <div className=\"review-btn\" onClick={() => this.changeReportUp(review.reviewerName, true)}><span><i className={reviewFlag && reviewFlag.webreviewlike === true ? \"fa fa-thumbs-up cornflowerblue\" : \"fa fa-thumbs-up\"}></i></span></div>\n                            <div className=\"review-btn\" onClick={() => this.changeReportDown(review.reviewerName, false)}><span><i className={reviewFlag && reviewFlag.webreviewlike === false ? \"fa fa-thumbs-down cornflowerblue\" : \"fa fa-thumbs-down ffgdgdfgdfg\"}></i></span></div>\n                            <h6 className=\"ml-2 mb-0 opacity-60\">Report</h6>\n                          </div>\n                        </div>\n                      )\n                    })\n                  }\n                  <a href=\"#\" className=\"mt-4 d-inline-block\" onClick={this.handleModal.bind(this)}>Show more <span className=\"ml-1\"><i className=\"fa fa-angle-down\"></i></span></a>\n                </div>\n                <div className=\"col-md-6 text-light p-2 pb-5 pl-4\">\n                  <div className=\"p-5\" style={{ backgroundImage: `url(/assets/images/img21.jpg)`, backgroundPosition: 'center', backgroundRepeat: 'no-repeat' }}>\n                    <h2>Ready to go long-term?</h2>\n                    <h5 className=\"font-weight-light\">Check out our degrees.</h5>\n                    <a href=\"#\" className=\"btn btn-lightblue text-light rounded-0 mt-0\">Explore degree</a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <Modal size=\"lg\" show={this.state.openModal} onHide={this.handleModal.bind(this)} animation={true}>\n          <Modal.Body>\n              <div className=\"container\">\n                <h2 className=\"mb-4\">Review</h2>\n                <div className=\"col-md-12\">\n                  {\n                    allReviewData.length > 0 &&\n                    allReviewData.slice(\n                      ((activePage - 1) * staticNumberOfRow),\n                      ((activePage - 1) + 1) * staticNumberOfRow\n                    ).map((review, index) => {\n                      let reviewFlag = allDbReviewData.find(item => item.webreviewname === review.reviewerName && item.webipaddress === this.state.ipAddress);\n                      return (\n                        <div key={index} className=\"comment-sec\">\n                          <h5>{review.reviewerName ? review.reviewerName : ''}</h5>\n                          <div className=\"d-flex\">\n                            <div className=\"d-flex\">\n                              <StarRatings\n                                rating={setRating(review.starRating)}\n                                starRatedColor=\"#ffc107\"\n                                numberOfStars={5}\n                                name='rating'\n                                starDimension=\"20px\"\n                                starSpacing=\"5px\"\n                              />\n                            </div>\n                            <h6 className=\"mb-0 opacity-80 font-weight-normal ml-2\">{dayDifference(review.createTime)}</h6>\n                          </div>\n                          <p className=\"h6 h5 font-weight-normal mt-2\">{review.comment ? review.comment : ''}</p>\n                          <h6 className=\"font-weight-normal opacity-60\">Was this helpful?</h6>\n                          <div className=\"d-flex align-items-center\">\n                            <div className=\"review-btn\" onClick={() => this.changeReportUp(review.reviewerName, true)}><span><i className={reviewFlag && reviewFlag.webreviewlike === true ? \"fa fa-thumbs-up cornflowerblue\" : \"fa fa-thumbs-up\"}></i></span></div>\n                            <div className=\"review-btn\" onClick={() => this.changeReportDown(review.reviewerName, false)}><span><i className={reviewFlag && reviewFlag.webreviewlike === false ? \"fa fa-thumbs-down cornflowerblue\" : \"fa fa-thumbs-down ffgdgdfgdfg\"}></i></span></div>\n                            <h6 className=\"ml-2 mb-0 opacity-60\">Report</h6>\n                          </div>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n                <div className=\"row justify-content-center\">\n                  <div className=\"pagination-detail\">\n                    <Pagination\n                      hideFirstLastPages\n                      activePage={this.state.activePage}\n                      itemsCountPerPage={this.state.staticNumberOfRow}\n                      itemClass=\"page-item\"\n                      linkClass=\"page-link\"\n                      totalItemsCount={allReviewData.length}\n                      pageRangeDisplayed={5}\n                      onChange={this.handlePageChange.bind(this)}\n                    />\n                  </div>\n                </div>\n              </div>\n          </Modal.Body>\n        </Modal>\n      </>\n    )\n  }\n}\n\nexport default Review;"]},"metadata":{},"sourceType":"module"}