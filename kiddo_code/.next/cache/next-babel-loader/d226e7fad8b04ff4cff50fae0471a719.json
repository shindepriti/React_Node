{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/dell/Desktop/kiddo_code/components/Event/Details/details.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\n\nvar fetch = require('isomorphic-fetch');\n\nimport Router from 'next/router';\n\nvar moment = require('moment');\n\nvar Stats = /*#__PURE__*/function (_Component) {\n  _inherits(Stats, _Component);\n\n  var _super = _createSuper(Stats);\n\n  function Stats(props) {\n    var _this;\n\n    _classCallCheck(this, Stats);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      currentEvent: {},\n      remainingTime: {\n        days: '',\n        hours: '',\n        minutes: '',\n        seconds: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Stats, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var id = Router.query.id;\n      var splitData = id.split('-');\n      var query = \"\\n                    query ActivityById($id: ID!){\\n                        products(where:{id:$id}){\\n                            id,\\n                            product_name,\\n                            product_introduction,\\n                            product_hours,\\n                            product_type{\\n                              id,\\n                              product_type\\n                            },\\n                            product_date,\\n                            product_start_time,\\n                            product_end_time,\\n                            product_total_seats,\\n                            product_remain_seats,\\n                            product_event_map\\n                        }\\n                    }\\n                    \";\n      var variables = {\n        \"id\": Number(splitData[0])\n      };\n      fetch(process.env.GRAPHURL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: query,\n          variables: variables\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        _this2.setState({\n          currentEvent: response.data.products.length ? response.data.products[0] : {}\n        });\n\n        setInterval(function () {\n          return _this2.duration();\n        }, 1000);\n      });\n    }\n  }, {\n    key: \"duration\",\n    value: function duration() {\n      var currentTime = moment(new Date()).format('YYYY-MM-DD hh:mm:ss');\n      var eventTime = this.state.currentEvent.product_date + ' ' + this.state.currentEvent.product_start_time;\n      eventTime = moment(eventTime).format('YYYY-MM-DD hh:mm:ss');\n\n      if (currentTime < eventTime) {\n        var duration = new Date(eventTime) - new Date(currentTime);\n\n        if (duration > 0) {\n          var seconds = parseInt(duration / 1000 % 60),\n              minutes = parseInt(duration / (1000 * 60) % 60),\n              hours = parseInt(duration / (1000 * 60 * 60) % 24),\n              days = parseInt(duration / (24 * 60 * 60 * 1000));\n          days = days < 10 ? \"0\" + days : days;\n          hours = hours < 10 ? \"0\" + hours : hours;\n          minutes = minutes < 10 ? \"0\" + minutes : minutes;\n          seconds = seconds < 10 ? \"0\" + seconds : seconds;\n        } else {\n          var seconds = '00',\n              minutes = '00',\n              hours = '00',\n              days = '00';\n        }\n      } else {\n        var seconds = '00',\n            minutes = '00',\n            hours = '00',\n            days = '00';\n      }\n\n      this.setState({\n        remainingTime: {\n          days: days,\n          hours: hours,\n          minutes: minutes,\n          seconds: seconds\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          currentEvent = _this$state.currentEvent,\n          remainingTime = _this$state.remainingTime;\n      return __jsx(React.Fragment, null, __jsx(\"section\", {\n        className: \"event-details-wrap dark-blue-bg text-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }, __jsx(\"h2\", {\n        className: \"mb-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }\n      }, \"Event details \"), __jsx(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"col-lg-5 col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }\n      }, __jsx(\"div\", {\n        className: \"col-12 add-countdown-time\",\n        \"data-countdown-date\": \"2020/07/28\",\n        \"data-detailed\": \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 33\n        }\n      }, __jsx(\"div\", {\n        \"data-active\": \"\",\n        className: \"row text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 37\n        }\n      }, __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 41\n        }\n      }, __jsx(\"span\", {\n        className: \"h1 text-primary mb-2\",\n        \"data-days\": \"\",\n        \"data-format\": \"%d\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 45\n        }\n      }, remainingTime.days ? remainingTime.days : '-'), \" \", __jsx(\"span\", {\n        className: \"h1 text-primary column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 169\n        }\n      }, \":\"), __jsx(\"span\", {\n        className: \"h6 mb-0\",\n        \"data-days-label\": \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 45\n        }\n      }, \"Days\")), __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 41\n        }\n      }, __jsx(\"span\", {\n        className: \"h1 text-primary mb-2\",\n        \"data-hours\": \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 45\n        }\n      }, remainingTime.hours ? remainingTime.hours : '-'), \" \", __jsx(\"span\", {\n        className: \"h1 text-primary column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 155\n        }\n      }, \":\"), __jsx(\"span\", {\n        className: \"h6 mb-0\",\n        \"data-hours-label\": \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 45\n        }\n      }, \"Hours\")), __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 41\n        }\n      }, __jsx(\"span\", {\n        className: \"h1 text-primary mb-2\",\n        \"data-minutes\": \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 45\n        }\n      }, remainingTime.minutes ? remainingTime.minutes : '-'), \" \", __jsx(\"span\", {\n        className: \"h1 text-primary column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 161\n        }\n      }, \":\"), __jsx(\"span\", {\n        className: \"h6 mb-0\",\n        \"data-minutes-label\": \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 45\n        }\n      }, \"Minutes\")), __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 41\n        }\n      }, __jsx(\"span\", {\n        className: \"h1 text-primary mb-2\",\n        \"data-seconds\": \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 45\n        }\n      }, remainingTime.seconds ? remainingTime.seconds : '-'), __jsx(\"span\", {\n        className: \"h6 mb-0\",\n        \"data-seconds-label\": \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 45\n        }\n      }, \"Seconds\"))), __jsx(\"div\", {\n        \"data-elapsed\": \"\",\n        style: {\n          display: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 37\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 41\n        }\n      }, \"This is the fallback for when the countdown is elapsed\"))), __jsx(\"div\", {\n        className: \"border-bottom pt-6 mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 33\n        }\n      }), __jsx(\"div\", {\n        className: \"event-details-main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 33\n        }\n      }, __jsx(\"div\", {\n        className: \"col-6 event-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 37\n        }\n      }, __jsx(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 41\n        }\n      }, \"Date\"), __jsx(\"h2\", {\n        className: \"display-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 41\n        }\n      }, currentEvent.product_date ? moment(currentEvent.product_date).format(\"DD\") : '-', \" \", __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 150\n        }\n      }, currentEvent.product_date ? moment(currentEvent.product_date).format(\"MMM\") : '-'))), __jsx(\"div\", {\n        className: \"col-6 event-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 37\n        }\n      }, __jsx(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 41\n        }\n      }, \"Starts at\"), __jsx(\"h2\", {\n        className: \"display-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 41\n        }\n      }, currentEvent.product_start_time ? moment(currentEvent.product_start_time, 'hh:mm:ss').format(\"h\") : '-', \" \", __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 173\n        }\n      }, currentEvent.product_start_time ? moment(currentEvent.product_start_time, 'hh:mm:ss').format(\"A\") : '-'))), __jsx(\"div\", {\n        className: \"col-6 event-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 37\n        }\n      }, __jsx(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 41\n        }\n      }, \"Seats left\"), __jsx(\"h2\", {\n        className: \"display-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 41\n        }\n      }, currentEvent.product_remain_seats ? currentEvent.product_remain_seats : '-', __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 144\n        }\n      }, \" /\", currentEvent.product_total_seats ? currentEvent.product_total_seats : '-'))), __jsx(\"div\", {\n        className: \"col-6 event-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 37\n        }\n      }, __jsx(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 41\n        }\n      }, \"Ends at\"), __jsx(\"h2\", {\n        className: \"display-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 41\n        }\n      }, currentEvent.product_end_time ? moment(currentEvent.product_end_time, 'hh:mm:ss').format(\"h\") : '-', \" \", __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 169\n        }\n      }, currentEvent.product_end_time ? moment(currentEvent.product_end_time, 'hh:mm:ss').format(\"A\") : '-'))))), __jsx(\"div\", {\n        className: \"col-lg-7 col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }\n      }, __jsx(\"iframe\", {\n        src: currentEvent.product_event_map ? currentEvent.product_event_map : '',\n        style: {\n          border: 0\n        },\n        allowFullScreen: \"\",\n        \"aria-hidden\": \"false\",\n        tabIndex: \"0\",\n        width: \"100%\",\n        height: \"450\",\n        frameBorder: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 33\n        }\n      }))))));\n    }\n  }]);\n\n  return Stats;\n}(Component);\n\nexport default Stats;","map":{"version":3,"sources":["/home/dell/Desktop/kiddo_code/components/Event/Details/details.js"],"names":["React","Component","fetch","require","Router","moment","Stats","props","state","currentEvent","remainingTime","days","hours","minutes","seconds","id","query","splitData","split","variables","Number","process","env","GRAPHURL","method","headers","body","JSON","stringify","then","response","json","setState","data","products","length","setInterval","duration","currentTime","Date","format","eventTime","product_date","product_start_time","parseInt","display","product_remain_seats","product_total_seats","product_end_time","product_event_map","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nconst fetch = require('isomorphic-fetch');\nimport Router from 'next/router';\nconst moment = require('moment');\n\nclass Stats extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentEvent: {},\n            remainingTime: {\n                days: '',\n                hours: '',\n                minutes: '',\n                seconds: '',\n            }\n        };\n    }\n\n    componentDidMount() {\n        let id = Router.query.id;\n        let splitData = id.split('-');\n        var query = `\n                    query ActivityById($id: ID!){\n                        products(where:{id:$id}){\n                            id,\n                            product_name,\n                            product_introduction,\n                            product_hours,\n                            product_type{\n                              id,\n                              product_type\n                            },\n                            product_date,\n                            product_start_time,\n                            product_end_time,\n                            product_total_seats,\n                            product_remain_seats,\n                            product_event_map\n                        }\n                    }\n                    `;\n        var variables = {\n            \"id\": Number(splitData[0])\n        }\n        fetch(process.env.GRAPHURL, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ query, variables }),\n        })\n            .then(response => response.json())\n            .then((response) => {\n                this.setState({\n                    currentEvent: response.data.products.length ? response.data.products[0] : {},\n                });\n                setInterval(() => this.duration(), 1000);\n            });\n\n    }\n    duration() {\n        var currentTime = moment(new Date()).format('YYYY-MM-DD hh:mm:ss')\n        var eventTime = this.state.currentEvent.product_date + ' ' + this.state.currentEvent.product_start_time;\n        eventTime = moment(eventTime).format('YYYY-MM-DD hh:mm:ss');\n        if (currentTime < eventTime) {\n            let duration = (new Date(eventTime)) - (new Date(currentTime));\n            if (duration > 0) {\n                var seconds = parseInt((duration / 1000) % 60)\n                    , minutes = parseInt((duration / (1000 * 60)) % 60)\n                    , hours = parseInt((duration / (1000 * 60 * 60)) % 24)\n                    , days = parseInt((duration / (24 * 60 * 60 * 1000)));\n\n                days = (days < 10) ? \"0\" + days : days;\n                hours = (hours < 10) ? \"0\" + hours : hours;\n                minutes = (minutes < 10) ? \"0\" + minutes : minutes;\n                seconds = (seconds < 10) ? \"0\" + seconds : seconds;\n            } else {\n                var seconds = '00'\n                    , minutes = '00'\n                    , hours = '00'\n                    , days = '00'\n            }\n        }\n        else {\n            var seconds = '00'\n                , minutes = '00'\n                , hours = '00'\n                , days = '00'\n        }\n\n        this.setState({\n            remainingTime: {\n                days: days,\n                hours: hours,\n                minutes: minutes,\n                seconds: seconds,\n            }\n        })\n    }\n    render() {\n        const { currentEvent, remainingTime } = this.state;\n        return (\n            <>\n                <section className=\"event-details-wrap dark-blue-bg text-light\">\n                    <div className=\"container\">\n                        <h2 className=\"mb-6\">Event details </h2>\n                        <div className=\"row\">\n                            <div className=\"col-lg-5 col-md-6\">\n\n                                <div className=\"col-12 add-countdown-time\" data-countdown-date=\"2020/07/28\" data-detailed=\"\">\n                                    <div data-active=\"\" className=\"row text-center\">\n\n                                        <span>\n                                            <span className=\"h1 text-primary mb-2\" data-days=\"\" data-format=\"%d\">{remainingTime.days ? remainingTime.days : '-'}</span> <span className=\"h1 text-primary column\">:</span>\n                                            <span className=\"h6 mb-0\" data-days-label=\"\">Days</span>\n                                        </span>\n\n                                        <span>\n                                            <span className=\"h1 text-primary mb-2\" data-hours=\"\">{remainingTime.hours ? remainingTime.hours : '-'}</span> <span className=\"h1 text-primary column\">:</span>\n                                            <span className=\"h6 mb-0\" data-hours-label=\"\">Hours</span>\n                                        </span>\n\n                                        <span>\n                                            <span className=\"h1 text-primary mb-2\" data-minutes=\"\">{remainingTime.minutes ? remainingTime.minutes : '-'}</span> <span className=\"h1 text-primary column\">:</span>\n                                            <span className=\"h6 mb-0\" data-minutes-label=\"\">Minutes</span>\n                                        </span>\n\n                                        <span>\n                                            <span className=\"h1 text-primary mb-2\" data-seconds=\"\">{remainingTime.seconds ? remainingTime.seconds : '-'}</span>\n                                            <span className=\"h6 mb-0\" data-seconds-label=\"\">Seconds</span>\n                                        </span>\n                                    </div>\n                                    <div data-elapsed=\"\" style={{ display: 'none' }}>\n                                        <h1>This is the fallback for when the countdown is elapsed</h1>\n                                    </div>\n                                </div>\n\n                                <div className=\"border-bottom pt-6 mb-5\"></div>\n\n                                <div className=\"event-details-main\">\n                                    <div className=\"col-6 event-details\">\n                                        <h6>Date</h6>\n                                        <h2 className=\"display-4\">{currentEvent.product_date ? moment(currentEvent.product_date).format(\"DD\") : '-'} <span>{currentEvent.product_date ? moment(currentEvent.product_date).format(\"MMM\") : '-'}</span></h2>\n                                    </div>\n                                    <div className=\"col-6 event-details\">\n                                        <h6>Starts at</h6>\n                                        <h2 className=\"display-4\">{currentEvent.product_start_time ? moment(currentEvent.product_start_time, 'hh:mm:ss').format(\"h\") : '-'} <span>{currentEvent.product_start_time ? moment(currentEvent.product_start_time, 'hh:mm:ss').format(\"A\") : '-'}</span></h2>\n                                    </div>\n                                    <div className=\"col-6 event-details\">\n                                        <h6>Seats left</h6>\n                                        <h2 className=\"display-4\">{currentEvent.product_remain_seats ? currentEvent.product_remain_seats : '-'}<span> /{currentEvent.product_total_seats ? currentEvent.product_total_seats : '-'}</span></h2>\n                                    </div>\n                                    <div className=\"col-6 event-details\">\n                                        <h6>Ends at</h6>\n                                        <h2 className=\"display-4\">{currentEvent.product_end_time ? moment(currentEvent.product_end_time, 'hh:mm:ss').format(\"h\") : '-'} <span>{currentEvent.product_end_time ? moment(currentEvent.product_end_time, 'hh:mm:ss').format(\"A\") : '-'}</span></h2>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"col-lg-7 col-md-6\">\n                                <iframe src={currentEvent.product_event_map ? currentEvent.product_event_map : ''} style={{ border: 0 }} allowFullScreen=\"\" aria-hidden=\"false\" tabIndex=\"0\" width=\"100%\" height=\"450\" frameBorder=\"0\"></iframe>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </>\n        )\n    }\n}\n\nexport default Stats;"]},"metadata":{},"sourceType":"module"}