{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/kiddo_code/components/Careers/Lifekiddo/lifekiddo.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Flickity from 'react-flickity-component';\nconst flickityOptions = {\n  pageDots: true,\n  wrapAround: true\n};\n\nconst fetch = require('isomorphic-fetch');\n\nclass Lifekiddo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      life_kiddo_title: \"\",\n      life_kiddo_description: \"\",\n      life_kiddo_images: []\n    };\n  }\n\n  componentDidMount() {\n    var query = `\n                    query {\n                        lifeAtKiddocodes{\n                            id,\n                            life_header_title,\n                            life_kiddo_description,\n                            life_images{\n                              name,\n                              url\n                            }\n                        }\n                    }\n                    `;\n    fetch(process.env.GRAPHURL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query\n      })\n    }).then(response => response.json()).then(response => {\n      //console.log(response);\n      let glanceData = response.data.lifeAtKiddocodes[0]; //console.log(glanceData); \n\n      this.setState({\n        life_kiddo_title: glanceData.life_header_title,\n        life_kiddo_description: glanceData.life_kiddo_description,\n        life_kiddo_images: glanceData.life_images\n      });\n    }); //console.log(homeBannerData);\n  }\n\n  render() {\n    const {\n      life_kiddo_title,\n      life_kiddo_description,\n      life_kiddo_images\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(\"section\", {\n      className: \"bg-primary-alt display-dots careers-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"row justify-content-center mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"col-lg-10 col-xl-8 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }, __jsx(\"h2\", {\n      className: \"h1 font-weight-medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }\n    }, life_kiddo_title ? life_kiddo_title : \"\", \" \"), __jsx(\"p\", {\n      className: \"lead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }\n    }, life_kiddo_description ? life_kiddo_description : \"\"))), __jsx(\"div\", {\n      className: \"row justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"col-lg-10 col-xl-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }, __jsx(\"div\", {\n      className: \"mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 33\n      }\n    }, life_kiddo_images.length > 0 && __jsx(Flickity, {\n      className: 'carousel-cell' // default ''\n      ,\n      elementType: 'div' // default 'div'\n      ,\n      options: flickityOptions // takes flickity options {}\n      ,\n      reloadOnUpdate: true // default false\n      ,\n      static: false // default false\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 41\n      }\n    }, life_kiddo_images.length > 0 && life_kiddo_images.map((images, index) => {\n      return __jsx(React.Fragment, {\n        key: \"image_\" + index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 57\n        }\n      }, __jsx(\"div\", {\n        className: \"carousel-cell mx-3 \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 61\n        }\n      }, __jsx(\"img\", {\n        src: process.env.GRAPHIMAGEURL + images.url,\n        alt: \"Image\",\n        className: \"rounded\",\n        style: {\n          height: \"fixed\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 65\n        }\n      })));\n    }))))))));\n  }\n\n}\n\nexport default Lifekiddo;","map":{"version":3,"sources":["/home/dell/Desktop/kiddo_code/components/Careers/Lifekiddo/lifekiddo.js"],"names":["React","Component","Flickity","flickityOptions","pageDots","wrapAround","fetch","require","Lifekiddo","constructor","props","state","life_kiddo_title","life_kiddo_description","life_kiddo_images","componentDidMount","query","process","env","GRAPHURL","method","headers","body","JSON","stringify","then","response","json","glanceData","data","lifeAtKiddocodes","setState","life_header_title","life_images","render","length","map","images","index","GRAPHIMAGEURL","url","height"],"mappings":"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","sourcesContent":["\nimport React, {Component} from 'react';\nimport Flickity from 'react-flickity-component';\nconst flickityOptions = {\n    pageDots: true,\n    wrapAround: true\n}\nconst fetch = require('isomorphic-fetch');\n\nclass Lifekiddo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            life_kiddo_title: \"\",\n            life_kiddo_description: \"\",\n            life_kiddo_images: []\n        };\n    }\n\n    componentDidMount() {\n        var query = `\n                    query {\n                        lifeAtKiddocodes{\n                            id,\n                            life_header_title,\n                            life_kiddo_description,\n                            life_images{\n                              name,\n                              url\n                            }\n                        }\n                    }\n                    `;\n        fetch(process.env.GRAPHURL, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ query }),\n            })\n            .then(response => response.json())\n            .then((response) => {\n                //console.log(response);\n                let glanceData = response.data.lifeAtKiddocodes[0];\n                //console.log(glanceData); \n                this.setState({\n                    life_kiddo_title: glanceData.life_header_title,\n                    life_kiddo_description: glanceData.life_kiddo_description,\n                    life_kiddo_images: glanceData.life_images\n                });\n            });\n\n        //console.log(homeBannerData);\n    }\n    render(){\n        const { life_kiddo_title, life_kiddo_description, life_kiddo_images } = this.state;\n        return (\n            <>\n                <section className=\"bg-primary-alt display-dots careers-wrap\">\n                    <div className=\"container\">\n                        <div className=\"row justify-content-center mb-4\">\n                            <div className=\"col-lg-10 col-xl-8 text-center\">\n                                <h2 className=\"h1 font-weight-medium\">{life_kiddo_title ? life_kiddo_title : \"\"} </h2>\n                                <p className=\"lead\">{life_kiddo_description ? life_kiddo_description : \"\"}</p>\n                            </div>\n                        </div>\n                        <div className=\"row justify-content-center\">\n                            <div className=\"col-lg-10 col-xl-8\">\n                                <div className=\"mb-5\">\n                                    {\n                                        life_kiddo_images.length > 0 &&\n                                        <Flickity\n                                            className={'carousel-cell'} // default ''\n                                            elementType={'div'} // default 'div'\n                                            options={flickityOptions} // takes flickity options {}\n                                            reloadOnUpdate={true} // default false\n                                            static={false} // default false\n                                        >\n                                            {\n                                                life_kiddo_images.length > 0 &&\n                                                life_kiddo_images.map((images, index) => {\n                                                    return (\n                                                        <React.Fragment key={\"image_\"+index}>\n                                                            <div className=\"carousel-cell mx-3 \">\n                                                                <img src={process.env.GRAPHIMAGEURL + images.url} alt=\"Image\" className=\"rounded\" style={{height:\"fixed\"}} />\n                                                            </div>\n                                                        </React.Fragment>\n                                                    )\n                                                })\n                                            }\n                                        </Flickity>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </>\n        )\n    }\n}\n\nexport default Lifekiddo;"]},"metadata":{},"sourceType":"module"}