{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/dell/Desktop/kiddo_code/components/Homepage/Showcase/showcase.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Flickity from 'react-flickity-component';\nvar flickityOptions = {\n  initialIndex: 0,\n  accessibility: true,\n  pageDots: false,\n  wrapAround: true\n};\n\nvar fetch = require('isomorphic-fetch');\n\nvar Showcase = /*#__PURE__*/function (_Component) {\n  _inherits(Showcase, _Component);\n\n  var _super = _createSuper(Showcase);\n\n  function Showcase(props) {\n    var _this;\n\n    _classCallCheck(this, Showcase);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      originalData: [],\n      showcaseData: []\n    };\n    return _this;\n  }\n\n  _createClass(Showcase, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var query = \"\\n            query {\\n                 homeShowcases{\\n                        id,\\n                        showcase_title,\\n                        showcase_image{\\n                          name,\\n                          url\\n                        },\\n                        showcase_description\\n                    }\\n            }\";\n      var variables = {\n        \"id\": 3\n      };\n      fetch(process.env.GRAPHURL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: query,\n          variables: variables\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        // console.log(response);\n        var finalResponse = response.data.homeShowcases;\n\n        _this2.setState({\n          originalData: finalResponse\n        });\n      });\n    } // getShowcasesData = (index) => {\n    //     let originalData = this.state.originalData;\n    //     this.setState({\n    //         showcaseData: originalData[index].homeShowcases\n    //     })\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var originalData = this.state.originalData;\n      return __jsx(React.Fragment, null, __jsx(\"section\", {\n        className: \"bg-primary-alt showcase-sec-wrap inside-arrow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"row justify-content-left mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"col-lg-12 col-xl-12 text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }\n      }, __jsx(\"h2\", {\n        className: \"h1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }\n      }, \"Showcase\"))), __jsx(\"div\", {\n        className: \"row justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"col-lg-12 col-xl-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }\n      }, __jsx(\"div\", {\n        \"data-flickity\": \"{ \\\"imagesLoaded\\\": true, \\\"wrapAround\\\": true }\",\n        className: \"mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }\n      }, originalData.length > 0 && __jsx(Flickity, {\n        className: 'carousel-cell' // default ''\n        ,\n        elementType: 'div' // default 'div'\n        ,\n        options: flickityOptions // takes flickity options {}\n        ,\n        disableImagesLoaded: false // default false\n        ,\n        reloadOnUpdate: true // default false\n        ,\n        \"static\": true // default false\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 41\n        }\n      }, originalData.length > 0 && originalData.map(function (showcaseDataGet, index) {\n        return __jsx(\"div\", {\n          key: index,\n          className: \"carousel-cell col-xl-4 col-lg-4 col-md-5 col-9 pb-1\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 53\n          }\n        }, __jsx(\"div\", {\n          className: \"carousel-cell\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 57\n          }\n        }, __jsx(\"img\", {\n          src: showcaseDataGet.showcase_image.url ? process.env.GRAPHIMAGEURL + showcaseDataGet.showcase_image.url : \"/assets/images/female-2.jpg\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 61\n          }\n        }), __jsx(\"div\", {\n          className: \"card-wrap\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 61\n          }\n        }, __jsx(\"h4\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 65\n          }\n        }, showcaseDataGet.showcase_title), __jsx(\"p\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 65\n          }\n        }, showcaseDataGet.showcase_description))));\n      }))))))));\n    }\n  }]);\n\n  return Showcase;\n}(Component);\n\nexport default Showcase;","map":{"version":3,"sources":["/home/dell/Desktop/kiddo_code/components/Homepage/Showcase/showcase.js"],"names":["React","Component","Flickity","flickityOptions","initialIndex","accessibility","pageDots","wrapAround","fetch","require","Showcase","props","state","originalData","showcaseData","query","variables","process","env","GRAPHURL","method","headers","body","JSON","stringify","then","response","json","finalResponse","data","homeShowcases","setState","length","map","showcaseDataGet","index","showcase_image","url","GRAPHIMAGEURL","showcase_title","showcase_description"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Flickity from 'react-flickity-component';\nconst flickityOptions = {\n    initialIndex: 0,\n    accessibility: true,\n    pageDots: false,\n    wrapAround: true\n}\n\nconst fetch = require('isomorphic-fetch');\n\nclass Showcase extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            originalData: [],\n            showcaseData: []\n        };\n    }\n\n    componentDidMount() {\n        var query = `\n            query {\n                 homeShowcases{\n                        id,\n                        showcase_title,\n                        showcase_image{\n                          name,\n                          url\n                        },\n                        showcase_description\n                    }\n            }`;\n        var variables = {\n            \"id\": 3\n        }\n        fetch(process.env.GRAPHURL, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ query, variables }),\n            })\n            .then(response => response.json())\n            .then((response) => {\n                // console.log(response);\n                let finalResponse = response.data.homeShowcases;\n                this.setState({\n                    originalData: finalResponse\n                });\n            });\n\n        \n    }\n    // getShowcasesData = (index) => {\n    //     let originalData = this.state.originalData;\n\n    //     this.setState({\n    //         showcaseData: originalData[index].homeShowcases\n\n    //     })\n    // }\n    render(){\n\n        const { originalData } = this.state;\n        \n        return (\n            <>\n                <section className=\"bg-primary-alt showcase-sec-wrap inside-arrow\">\n                    <div className=\"container\">\n                        <div className=\"row justify-content-left mb-4\">\n                            <div className=\"col-lg-12 col-xl-12 text-left\">\n                                <h2 className=\"h1\">Showcase</h2>\n                            </div>\n                        </div>\n                        <div className=\"row justify-content-center\">\n                            <div className=\"col-lg-12 col-xl-12\">\n                                <div data-flickity='{ \"imagesLoaded\": true, \"wrapAround\": true }' className=\"mb-5\">\n                                    {\n                                        originalData.length > 0 &&\n                                        <Flickity\n                                            className={'carousel-cell'} // default ''\n                                            elementType={'div'} // default 'div'\n                                            options={flickityOptions} // takes flickity options {}\n                                            disableImagesLoaded={false} // default false\n                                            reloadOnUpdate={true} // default false\n                                            static={true} // default false\n                                        >\n                                        {\n                                            originalData.length > 0 &&\n                                            originalData.map((showcaseDataGet, index) => {\n                                                return (\n                                                    <div key={index} className=\"carousel-cell col-xl-4 col-lg-4 col-md-5 col-9 pb-1\">\n                                                        <div className=\"carousel-cell\">\n\n                                                            <img src={showcaseDataGet.showcase_image.url ? process.env.GRAPHIMAGEURL + showcaseDataGet.showcase_image.url : \"/assets/images/female-2.jpg\" } />\n                                                            <div className=\"card-wrap\">\n                                                                <h4>{showcaseDataGet.showcase_title}</h4>\n                                                                <p>{showcaseDataGet.showcase_description}</p>\n                                                            </div>\n                                                        </div>\n                                                    </div> \n                                                )\n                                            })\n                                        }\n                                        </Flickity>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </>\n        )\n    }\n}\n\nexport default Showcase;"]},"metadata":{},"sourceType":"module"}